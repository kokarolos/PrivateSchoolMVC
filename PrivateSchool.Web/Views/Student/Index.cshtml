@model PagedList.IPagedList<PrivateSchool.Entities.Concrete.Student>
@using PagedList;
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" />
@{
    ViewBag.Title = "Students";
}

<h2>Students</h2>

<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-dark" })
</p>
@{
    SelectListItem s1 = new SelectListItem() { Text = "1", Value = "1" };
    SelectListItem s2 = new SelectListItem() { Text = "2", Value = "2" };
    SelectListItem s3 = new SelectListItem() { Text = "3", Value = "3" };
    SelectListItem s4 = new SelectListItem() { Text = "4", Value = "4" };

    var items = new List<SelectListItem>() { s1, s2, s3, s4 };
}

<div class="row">
    <div class="col-2">
        @using (Html.BeginForm("Index", "Student", FormMethod.Get))
        {

            @Html.TextBox("firstName", null, new { placeholder = "Search FirstName" })
            @Html.TextBox("lastName", null, new { placeholder = "Search LastName" })
            @Html.TextBox("minAge", null, new { type = "number", placeholder = "Search Min Age" })
            @Html.TextBox("maxAge", null, new { type = "number", placeholder = "Search Max Age" })
            string str = ViewBag.CurrentSortOrder;
            @Html.TextBox("sortOrder", str, new { type = "hidden" })
            @Html.DropDownList("userPageSize", items)
            <input type="submit" value="Search" />
        }
    </div>
    <div class="col-10">
        <table class="table table-dark ">
            <thead>
                <tr>
                    <td>@Html.DisplayName("Photo")</td>
                    <td>
                        @Html.ActionLink("First Name", "Index", "Student",
                        new
                             {
                            sortOrder = ViewBag.FirstNameSortParam,
                            firstName = ViewBag.CurrentFirstName,
                            lastName = ViewBag.CurrentLastName,
                            minAge = ViewBag.CurrentMinAge,
                            maxAge = ViewBag.CurrentMaxAge,
                            userPageSize = ViewBag.PageSize
                        }, new { @class = ViewBag.FNView })
                    </td>
                    <td>
                        @Html.ActionLink("Last Name", "Index", "Student", new
                        {
                            sortOrder = ViewBag.LastNameSortParam,
                            firstName = ViewBag.CurrentFirstName,
                            lastName = ViewBag.CurrentLastName,
                            minAge = ViewBag.CurrentMinAge,
                            maxAge = ViewBag.CurrentMaxAge,
                            userPageSize = ViewBag.PageSize
                        }, new { @class = ViewBag.LNView })
                    </td>
                    <td>
                        @Html.ActionLink("Age", "Index", "Student", new
                        {
                            sortOrder = ViewBag.AgeSortParam,
                            firstName = ViewBag.CurrentFirstName,
                            lastName = ViewBag.CurrentLastName,
                            minAge = ViewBag.CurrentMinAge,
                            maxAge = ViewBag.CurrentMaxAge,
                            userPageSize = ViewBag.PageSize
                         }, new { @class = ViewBag.AGView })
                    </td>
                    <td>@Html.DisplayName("Phone")</td>
                    <td>@Html.DisplayName("Email")</td>
                    <td>@Html.DisplayName("CoursesAssignemnts")</td>
                    <td>@Html.DisplayName("Action")</td>
                </tr>
            </thead>
            <tbody>
                @foreach (var student in Model)
                {
                    <tr>
                        <td><img src="@student.PhotoUrl" class="img-fluid" width="150" /></td>
                        <td>@Html.DisplayFor(x => student.FirstName)</td>
                        <td>@Html.DisplayFor(x => student.LastName)</td>
                        <td>@Html.DisplayFor(x => student.Age)</td>
                        <td>@Html.DisplayFor(x => student.PhoneNumber)</td>
                        <td>@Html.DisplayFor(x => student.Email)</td>
                        <td>
                            <ul>
                                @foreach (var course in student.Courses)
                                {
                                    <li>@Html.DisplayFor(x => course.Stream)</li>
                                    foreach (var assignment in course.Assignments)
                                    {
                                        <li><ol>@Html.DisplayFor(x => assignment.Description)</ol></li>
                                    }
                                }
                            </ul>
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = student.StudentId }, new { @class = "btn btn-dark " })
                            @Html.ActionLink("Details", "Details", new { id = student.StudentId }, new { @class = "btn btn-dark" })
                            @Html.ActionLink("Delete", "Delete", new { id = student.StudentId }, new { @class = "btn btn-dark" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

</div>




Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount 
@Html.PagedListPager(Model, x => @Url.Action("Index", "Student", new { page = x, sortOrder = ViewBag.CurrentSortOrder, firstname = ViewBag.CurrentFirstName, lastname = ViewBag.CurrentLastName, minage = ViewBag.CurrentMinAge, maxage = ViewBag.CurrentMaxAge, userPageSize = ViewBag.PageSize }))

